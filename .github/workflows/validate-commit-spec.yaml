on: push
env:
  SCHEMA: .schemas/commit-msg.schema.json
jobs:
  validate-commit-spec:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: validate
        run: |
          # Get the most recent commit where this workflow succeeded
          base_commit=$(curl "https://api.github.com/repos/${{ github.repository }}/actions/workflows/$(basename ${{ github.workflow }}/runs?status=success" | jq -r '.workflow_runs | sort_by(.run_number) | last | .head_sha')
          # Get all SVG files that have been added or modified since the base commit
          files=($(git diff-tree --name-only --diff-filter=AM -r "$base_commit" HEAD | sed -ne '/^[^\.].*\/.*\.svg$/p'))
          # Determine the commits that last added/modified these files
          declare -A map
          for f in "${files[@]}"; do
            # Map from commits to the files that they added/modified
            map[$(git log -n 1 --format=%H "$f")]+="$f "
          done
          # Validate the YAML spec in the commit message of each commit
          for c in "${!map[@]}"; do
            yaml=$(mktemp -d)/tmp.yaml
            git log --format=%b -n 1 "$c" | sed -n '/^---$/ { :a; p; n; ba; }' >"$yaml"
            # Ensure that YAML spec is not empty
            if ! [[ -s "$yaml" ]]; then
              echo -e "Commit $c: empty YAML spec"
              echo "The following files have been last touched by this commit:"
              echo ${map[$c]% } | tr ' ' $'\n'
              exit 1
            fi
            # Ensure that YAML spec matches schema
            if ! out=$(ajv validate -s "$SCHEMA" -d "$yaml" 2>&1); then
              echo -e "Commit $c: invalid YAML spec"
              cat "$yaml"
              echo "$out"
              exit 1
            fi
            # Ensure that YAML spec covers all files last added/modified by this commit
            keys=$(yq read -p p "$yaml" '*' | tr -d '"')
            if ! [[ "$keys" =~ ^source$|^edited$|^converted ]]; then
              for f in ${map[$c]}; do
                grep -q "^$f$" <<<"$keys" || missing+=("$f")
              done
              if [[ "${missing[@]}" ]]; then
                echo "Commit $c: YAML spec does not cover all added/modified files"
                cat "$yaml"
                echo "The following files are missing from the YAML spec:"
                printf '%s\n' "${missing[@]}"
                exit 1
              fi
            fi
          done
